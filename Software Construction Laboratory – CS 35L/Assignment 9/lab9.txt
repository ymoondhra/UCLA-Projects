1.
git clone https://git.savannah.gnu.org/git/diffutils.git

2.
cd  diffutils
git log > git-log.txt

3.
git tag > git-tags.txt

4.
I used emacs, did a search (C-s) for “maint: quote ‘like’”, which
led me to the appropriate commit. I copied the commit ID
(62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f).
To create the patch file,
I ran git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f \
--stdout > quote-patch.txt.

5.
git checkout v3.0
In addition to returned to version 3.0, this command
outputted a note saying that I am in a detached HEAD state, meaning
that I can make experimental changes without affected other branches.

6.
patch -p1 < quote-patch.txt. This applied the patch, and I skipped
the files it could not find.

7.
Running git status outputted the following
	HEAD detached at v3.0
	Changes not staged for commit:
	  (use "git add <file>..." to update what will be committed)
	    (use "git checkout -- <file>..."
	    to discard changes in working directory)

	modified:   NEWS
	modified:   README
	modified:   TODO
	modified:   doc/diagmeet.note
	modified:   ms/config.bat
	modified:   ms/config.site
	modified:   po/en.po
	modified:   src/analyze.c
	modified:   src/cmp.c
	modified:   src/context.c
	modified:   src/diff.c
	modified:   src/diff.h
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/ifdef.c
	modified:   src/io.c
	modified:   src/sdiff.c
	modified:   src/side.c
	modified:   src/system.h
	modified:   src/util.c
	modified:   tests/help-version

	Untracked files:
	  (use "git add <file>..." to include in what will be committed)

	#There were many untracked files,
	#which are not relevant to this lab.
	
		    
8.
Learned the commands

9.
Iterating manually through each tracked file that was not a .c
file, I opened each file with emacs, ran “C-x v u” and then typed yes
to revert the file back to the old version.
For the .c files:
I initially tried to open all the files on emacs at once using “emacs
src/*.c”, but I honestly could not figure out how to undo all the
hunks at once, so I resorted to iterating through the files
individually and opening each one with emacs. Then, for each file
non-c-file, I did “C-x v =” to open the *vc-diff* buffer generated by
vc-diff and then used “C-u C-c C-a” to undo all hunks (using ‘n’ to go
to the next hunk occasionally). Obviously, I saved each change to each
file using “C-x C-c y” Finally, I manually went through each of the
remaining 6 .c files and changed the grave accents to apostrophes that
were not in comments.

10.
By calling “ls src/*.c.rej”, I found two *.rej files: diff3.c.rej
and diff.c.rej The reason these patches failed is because the patch
could not find the respective line to delete (because it didn’t
exist). I manually replaced the grave accents with apostrophes.

11.
git clean -f

12.
Git status returned the following:
Changes not staged for commit:
modified:   src/cmp.c
modified:   src/diff.c
modified:   src/diff3.c
modified:   src/dir.c
modified:   src/sdiff.c
modified:   src/util.c
I ran “git diff > quote-3.0-patch.txt” to create the patch file

13.
$wget
https://web.cs.ucla.edu/classes/winter19/cs35L/assign/diffutils-gets.diff
$./bootstrap
$patch -p0 < diffutils-gets.diff
       // outputted: patching file lib/stdio.in.h
$./configure
$make
$make check
$diff . – //outputted “diff: cannot compare '-' to a directory”
$diff --help //outputted in the correct format (apostrophes instead of
grave accents)

14.
I renamed my diffutils repository to “diffutilssteps113”. Outside
of this directory, I cloned the original git repository and cd’ed into
it. I then copied the contents into a new directory by using “cp -R
src ../diffutils-3.0”. I cd’ed into diffutilssteps113 and ran “cp -R
src ../diffutils-3.0-patch”.
The following command runs my modified
version of diffutils’ diff on the two source codes:
diffutilssteps113/src/diff -pru diffutils-3.0 diffutils-3.0-patch >
quote-3.0-test.txt

15.
diff -u quote-3.0-test.txt quote-3.0-patch.txt > output.txt
This command compared quote-3.0-test.txt and quote-3.0-patch.txt and
poured the output into a new file, called output.txt. Output.txt ended
up being extremely lines long. However, most of the differences are
simply spacing and accent differences. Therefore, the differences are
innocuous.
